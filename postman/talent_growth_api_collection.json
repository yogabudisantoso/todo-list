{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Talent Growth API",
    "description": "A collection for testing the Talent Growth API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData.data && jsonData.data.token) {",
                  "    pm.environment.set(\"token\", jsonData.data.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "Login with user credentials and get JWT token"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "profile"
              ]
            },
            "description": "Get the authenticated user's profile"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "Todo Items",
      "item": [
        {
          "name": "Get All Items (Paginated)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/items?page=1&limit=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all todo items with pagination"
          },
          "response": []
        },
        {
          "name": "Get Item by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/items/1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items",
                "1"
              ]
            },
            "description": "Get a specific todo item by ID"
          },
          "response": []
        },
        {
          "name": "Create Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Complete project\",\n    \"description\": \"Finish the RESTful API implementation\",\n    \"status\": \"pending\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/items",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items"
              ]
            },
            "description": "Create a new todo item"
          },
          "response": []
        },
        {
          "name": "Update Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated task\",\n    \"description\": \"This task has been updated\",\n    \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/items/1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items",
                "1"
              ]
            },
            "description": "Update an existing todo item"
          },
          "response": []
        },
        {
          "name": "Delete Item",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/items/1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items",
                "1"
              ]
            },
            "description": "Delete a todo item"
          },
          "response": []
        }
      ],
      "description": "CRUD operations for todo items"
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Authentication",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/items",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items"
              ]
            },
            "description": "Test with invalid token"
          },
          "response": []
        },
        {
          "name": "Missing Required Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"This should fail because name is missing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/items",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items"
              ]
            },
            "description": "Test validation for missing required fields"
          },
          "response": []
        },
        {
          "name": "Item Not Found",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/items/999",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "items",
                "999"
              ]
            },
            "description": "Test with non-existent item ID"
          },
          "response": []
        }
      ],
      "description": "Tests for error handling"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}